name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'

jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js (for frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Write .env.production
        run: echo "${{ secrets.REACT_PROD_ENV }}" > frontend/.env.production
  
      - name: Build Frontend
        working-directory: frontend
        env:
          NODE_ENV: production
        run: |
          npm install
          npm run build

          
      - name: Install ARM64 cross-compiler for CGO
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build Backend
        working-directory: backend
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: arm64
          CC: aarch64-linux-gnu-gcc
        run: go build -o pscarrierinc_payStub

      - name: Deploy to Pi5 via SCP (Frontend)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PI5_SSH_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          rsync -avz -e "ssh -i key.pem -p 64 -o StrictHostKeyChecking=no" frontend/build/ psingh@ci.singhpalwinder.com:/var/www/pscarrierinc/
          rm key.pem

      - name: Deploy to Pi5 via SCP (Backend)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PI5_SSH_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem

          # Replace binary on the Pi
          rsync -avz -e "ssh -i key.pem -p 64 -o StrictHostKeyChecking=no" backend/pscarrierinc_payStub psingh@ci.singhpalwinder.com:/var/www/pscarrierinc_api/

          # Restart backend service
          ssh -i key.pem -p 64 -o StrictHostKeyChecking=no psingh@ci.singhpalwinder.com "sudo systemctl restart pscarrierinc_payStub.service"

          rm key.pem
